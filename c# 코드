using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;
//add me cod


//Add code
using System.IO;
using System.IO.Ports;
using System.Threading;


namespace Serial_2010_cshap
{
    public partial class SerialPort_TestProgram : Form
    {
        delegate void SetTextCallback(string Text);

        public SerialPort_TestProgram()
        {
            InitializeComponent();

            this.serialPort1 = new System.IO.Ports.SerialPort();
            this.serialPort1.DataReceived += new System.IO.Ports.SerialDataReceivedEventHandler(this.SP1_DataReceived);

            //port
            //Put every available ports in comboBox
            //드라이버에 잡히는 것 순서대로 명령 리스트 시켜줌
            comboBox1.BeginUpdate();
            foreach (string comport in SerialPort.GetPortNames())//foreach (string comport in SerialPort_TestProgram.GetPortNames())
            {
                comboBox1.Items.Add(comport);
            }
            comboBox1.EndUpdate();



            //SerialPort 초기 설정.
            serialPort1.BaudRate = (int)38400;
            serialPort1.DataBits = (int)8;
            serialPort1.Parity = System.IO.Ports.Parity.None;                
            serialPort1.StopBits = StopBits.One;


            //Serial Form _Off button 설정
            button2.Enabled = false;  //off 기능 사라짐
            button2.Visible = false; //off 버튼 숨겨짐
            SerialFormEnagleChoice(true); //serial 설정버튼 on
        }

        //this.SP1.WriteTimeout = 10000;



        //data receved f(x)
        private void SP1_DataReceived(object sender, SerialDataReceivedEventArgs e)
        {
            //string receiveData = "";
            //포트로 데이터가 들어오면
            if (serialPort1.IsOpen)
            {
                string data = serialPort1.ReadExisting();
                ///receiveData = data;
                if (data != string.Empty)
                {
                    PacketData(data);
                }

            }
        }

        //data 처리...!!!!!!!!!!!!!!!!!!!
        private void PacketData(string Text)
        {

            if (this.tbReceived.InvokeRequired)
            {
                SetTextCallback d = new SetTextCallback(PacketData);
                this.Invoke(d, new object[] { Text });
            }
            else 
            {

                this.tbReceived.Text += Text;
                this.textBox7.Text = DateTime.Now.ToLongTimeString();   //시간표시

                if(Text == "a")
                {
                    string receive = tbReceived.Text;
                    mA_textBox.Text = string.Format("{0}{1}{2}{3}", receive[0], receive[1], receive[2], receive[3]);
                    W_textBox.Text = string.Format("{0}{1}{2}", receive[4], receive[5], receive[6]);
                    tbReceived.Text = "";
               
                }

            }       
                
        }




        //Port Open butten
        private void button1_Click(object sender, EventArgs e)
        {
            serialPort1.Open();
            
            if (serialPort1.IsOpen)
            {

                //Serial on/off Button의 보이고 안보이게 하기
                button1.Enabled = false; //on 기능 소멸
                button1.Visible = false; //on 버튼 사라짐
                button2.Enabled = true;  //off 기능 나타남
                button2.Visible = true; //off 버튼 나타남.

                mA_textBox.Text = "";
                tbReceived.Text = "";
                

                SerialFormEnagleChoice(false); //serial 설정버튼 off
            }
            else
            {
                tbReceived.Text = "Port Open Failed!!!";
            }

        }

        //Port Closed butten
        private void button2_Click(object sender, EventArgs e)
        {
            serialPort1.Close();
            tbReceived.Text = "Port Closed!!!";

            //Serial on/off Button의 보이고 안보이게 하기
            button1.Enabled = true; //on 기능 나타남
            button1.Visible = true; //on 버튼 나타남
            button2.Enabled = false;  //off 기능 사라짐
            button2.Visible = false; //off 버튼 사라짐

            SerialFormEnagleChoice(true); //serial 설정버튼 on
        }

        //Text Clear Butten
        private void button4_Click(object sender, EventArgs e)
        {
            //tbReceived.Text = "";

            mA_textBox.Text = "";
            W_textBox.Text = "";
        }

 
        //Port 초기 설정값!!!!!

        //단, 이곳은 클릭했을때 결정나는것임 젠장!
        //그래서 앞에 초기값 설정을 넣어는 뒸음 ㅠㅠ


        //1.Port설정
        private void comboBox1_SelectedIndexChanged(object sender, EventArgs e)
        {
            tbReceived.Text = comboBox1.Text;//ok
            serialPort1.PortName = comboBox1.SelectedItem.ToString();
            serialPort1.PortName = comboBox1.Text.ToString();//

        }

        //2.BaudRate 설정
        private void comboBox2_SelectedIndexChanged(object sender, EventArgs e)
        {
            switch (comboBox2.SelectedIndex)
            {
                case 0:
                    serialPort1.BaudRate = (int)9600;
                    break;
                case 1:
                    serialPort1.BaudRate = (int)14400;
                    break;
                case 2:
                    serialPort1.BaudRate = (int)19200;
                    break;
                case 3:
                    serialPort1.BaudRate = (int)38400;
                    break;
                case 4:
                    serialPort1.BaudRate = (int)57600;
                    break;
                case 5:
                    serialPort1.BaudRate = (int)115200;
                    break;
                case 6:
                    serialPort1.BaudRate = (int)128000;
                    break;
                default:
                    serialPort1.BaudRate = (int)115200;
                    break;
            }
        }

        //3.Databits 설정
        private void comboBox3_SelectedIndexChanged(object sender, EventArgs e)
        {
            switch (comboBox3.SelectedIndex)
            {
                case 0:
                    serialPort1.DataBits = 8;
                    break;
                case 1:
                    serialPort1.DataBits = 7;
                    break;
                default:
                    serialPort1.DataBits = 8;
                    break;
            }

        }

        //4.Parity 설정
        private void comboBox4_SelectedIndexChanged(object sender, EventArgs e)
        {
            switch (comboBox4.SelectedIndex)
            {
                case 0:
                    serialPort1.Parity = System.IO.Ports.Parity.Even; //enum System.IO.Prots.Parity
                    break;
                case 1:
                    serialPort1.Parity = System.IO.Ports.Parity.Mark;
                    break;
                case 2:
                    serialPort1.Parity = System.IO.Ports.Parity.None;
                    break;
                case 3:
                    serialPort1.Parity = System.IO.Ports.Parity.Odd;
                    break;
                case 4:
                    serialPort1.Parity = System.IO.Ports.Parity.Space;
                    break;
                default:
                    serialPort1.Parity = System.IO.Ports.Parity.None;
                    break;
            }
        }

        //5.Stopbits 설정
        private void comboBox5_SelectedIndexChanged(object sender, EventArgs e)
        {
            switch (comboBox5.SelectedIndex)
            {
                case 0:
                    //serialPort1.StopBits = StopBits.None;
                    MessageBox.Show("이 값은 지원되지 않습니다.");
                    break;
                case 1:
                    serialPort1.StopBits = StopBits.One;
                    break;
                case 2:
                    serialPort1.StopBits = StopBits.OnePointFive;
                    break;
                case 3:
                    serialPort1.StopBits = StopBits.Two;
                    break;
                default:
                    serialPort1.StopBits = StopBits.One;
                    break;
            }
        }


        //추가 사용 함수!!!!!!!!!!
        //창이 닫히면 자동으로 포트를 닫아준다...되나????
        private void frm_guitar_mng_FormClosing(object sender, FormClosingEventArgs e)
        {
            serialPort1.Close();
        }
  
        //Serial Port 설정을 위한 것의 활성화의 on/off
        private void SerialFormEnagleChoice(bool of)
        {
            cmCom_Port.Enabled = of;
            cmBaudRate.Enabled = of;
            cmData_bits.Enabled = of;
            cmParity.Enabled = of;
            cmStop_bits.Enabled = of;

            comboBox1.Enabled = of;
            comboBox2.Enabled = of;
            comboBox3.Enabled = of;
            comboBox4.Enabled = of;
            comboBox5.Enabled = of;
        }


        private void SerialPort_TestProgram_Load(object sender, EventArgs e)
        {
            
        }

        private void label6_Click(object sender, EventArgs e)
        {

        }

        private void Text_receive_Click(object sender, EventArgs e)
        {

        }

        private void button3_Click(object sender, EventArgs e)
        {
            
            string SendOFFMassage = "a";
            serialPort1.Write(SendOFFMassage); 

        }

        private void textBox1_TextChanged(object sender, EventArgs e)
        {

        }

        private void button7_Click(object sender, EventArgs e)
        {
            string SendOFFMassage = "b";
            serialPort1.Write(SendOFFMassage);
        }

        private void button5_Click(object sender, EventArgs e)
        {
            string SendOFFMassage = "c";
            serialPort1.Write(SendOFFMassage);
        }

        private void button6_Click(object sender, EventArgs e)
        {
            string SendOFFMassage = "d";
            serialPort1.Write(SendOFFMassage);
        }

        private void label16_Click(object sender, EventArgs e)
        {

        }



      
    }
    
    
}

